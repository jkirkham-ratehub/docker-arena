# This workflow will do a clean install of node dependencies, and run the linter
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [default]
  pull_request:
    branches: [default]

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x]

    steps:
      - uses: actions/checkout@v2
        with:
          # For commitlint; ideally this would only check out the feature branch's history, but
          # that's not currently an option.
          fetch-depth: ${{ github.event_name == 'push' }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci --no-optional
      - run: npm run ci --if-present
      - name: Commitlint
        run: npm run ci:commitlint --if-present
        if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/default'
    runs-on: ubuntu-latest

    needs: [lint]

    steps:
      - uses: actions/checkout@v2
        with:
          # Necessary to avoid the GitHub action credentials being used by semantic-release. When
          # semantic-release pushes to the tag, we want that push to trigger the docker build, but
          # the action credentials aren't allowed to trigger downstream workflows. Instead, we
          # explicitly use a personal access token.
          persist-credentials: false
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: npm ci
      - name: Release
        run: npx semantic-release -b default
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
